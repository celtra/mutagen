// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service/session/session.proto

package session

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	session "github.com/havoc-io/mutagen/pkg/session"
	url "github.com/havoc-io/mutagen/pkg/url"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreationSpecification struct {
	Alpha *url.URL `protobuf:"bytes,1,opt,name=alpha,proto3" json:"alpha,omitempty"`
	Beta  *url.URL `protobuf:"bytes,2,opt,name=beta,proto3" json:"beta,omitempty"`
	// Configuration is the base session configuration. It is the result of
	// merging the global configuration (unless disabled), any manually
	// specified configuration file, and any command line configuration
	// parameters.
	Configuration *session.Configuration `protobuf:"bytes,3,opt,name=configuration,proto3" json:"configuration,omitempty"`
	// ConfigurationAlpha is the alpha-specific session configuration. It is
	// determined based on command line configuration parameters.
	ConfigurationAlpha *session.Configuration `protobuf:"bytes,4,opt,name=configurationAlpha,proto3" json:"configurationAlpha,omitempty"`
	// ConfigurationBeta is the beta-specific session configuration. It is
	// determined based on command line configuration parameters.
	ConfigurationBeta    *session.Configuration `protobuf:"bytes,5,opt,name=configurationBeta,proto3" json:"configurationBeta,omitempty"`
	Labels               map[string]string      `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CreationSpecification) Reset()         { *m = CreationSpecification{} }
func (m *CreationSpecification) String() string { return proto.CompactTextString(m) }
func (*CreationSpecification) ProtoMessage()    {}
func (*CreationSpecification) Descriptor() ([]byte, []int) {
	return fileDescriptor_2ecc72b0215a83fe, []int{0}
}

func (m *CreationSpecification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreationSpecification.Unmarshal(m, b)
}
func (m *CreationSpecification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreationSpecification.Marshal(b, m, deterministic)
}
func (m *CreationSpecification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreationSpecification.Merge(m, src)
}
func (m *CreationSpecification) XXX_Size() int {
	return xxx_messageInfo_CreationSpecification.Size(m)
}
func (m *CreationSpecification) XXX_DiscardUnknown() {
	xxx_messageInfo_CreationSpecification.DiscardUnknown(m)
}

var xxx_messageInfo_CreationSpecification proto.InternalMessageInfo

func (m *CreationSpecification) GetAlpha() *url.URL {
	if m != nil {
		return m.Alpha
	}
	return nil
}

func (m *CreationSpecification) GetBeta() *url.URL {
	if m != nil {
		return m.Beta
	}
	return nil
}

func (m *CreationSpecification) GetConfiguration() *session.Configuration {
	if m != nil {
		return m.Configuration
	}
	return nil
}

func (m *CreationSpecification) GetConfigurationAlpha() *session.Configuration {
	if m != nil {
		return m.ConfigurationAlpha
	}
	return nil
}

func (m *CreationSpecification) GetConfigurationBeta() *session.Configuration {
	if m != nil {
		return m.ConfigurationBeta
	}
	return nil
}

func (m *CreationSpecification) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type CreateRequest struct {
	Specification        *CreationSpecification `protobuf:"bytes,1,opt,name=specification,proto3" json:"specification,omitempty"`
	Response             string                 `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2ecc72b0215a83fe, []int{1}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetSpecification() *CreationSpecification {
	if m != nil {
		return m.Specification
	}
	return nil
}

func (m *CreateRequest) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

type CreateResponse struct {
	Session              string   `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Prompt               string   `protobuf:"bytes,3,opt,name=prompt,proto3" json:"prompt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2ecc72b0215a83fe, []int{2}
}

func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (m *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(m, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

func (m *CreateResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateResponse) GetPrompt() string {
	if m != nil {
		return m.Prompt
	}
	return ""
}

type ListRequest struct {
	Selection            *session.Selection `protobuf:"bytes,1,opt,name=selection,proto3" json:"selection,omitempty"`
	PreviousStateIndex   uint64             `protobuf:"varint,2,opt,name=previousStateIndex,proto3" json:"previousStateIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2ecc72b0215a83fe, []int{3}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetSelection() *session.Selection {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *ListRequest) GetPreviousStateIndex() uint64 {
	if m != nil {
		return m.PreviousStateIndex
	}
	return 0
}

type ListResponse struct {
	StateIndex           uint64           `protobuf:"varint,1,opt,name=stateIndex,proto3" json:"stateIndex,omitempty"`
	SessionStates        []*session.State `protobuf:"bytes,2,rep,name=sessionStates,proto3" json:"sessionStates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2ecc72b0215a83fe, []int{4}
}

func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (m *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(m, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetStateIndex() uint64 {
	if m != nil {
		return m.StateIndex
	}
	return 0
}

func (m *ListResponse) GetSessionStates() []*session.State {
	if m != nil {
		return m.SessionStates
	}
	return nil
}

type FlushRequest struct {
	Selection            *session.Selection `protobuf:"bytes,1,opt,name=selection,proto3" json:"selection,omitempty"`
	SkipWait             bool               `protobuf:"varint,2,opt,name=skipWait,proto3" json:"skipWait,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *FlushRequest) Reset()         { *m = FlushRequest{} }
func (m *FlushRequest) String() string { return proto.CompactTextString(m) }
func (*FlushRequest) ProtoMessage()    {}
func (*FlushRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2ecc72b0215a83fe, []int{5}
}

func (m *FlushRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlushRequest.Unmarshal(m, b)
}
func (m *FlushRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlushRequest.Marshal(b, m, deterministic)
}
func (m *FlushRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlushRequest.Merge(m, src)
}
func (m *FlushRequest) XXX_Size() int {
	return xxx_messageInfo_FlushRequest.Size(m)
}
func (m *FlushRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FlushRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FlushRequest proto.InternalMessageInfo

func (m *FlushRequest) GetSelection() *session.Selection {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *FlushRequest) GetSkipWait() bool {
	if m != nil {
		return m.SkipWait
	}
	return false
}

type FlushResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FlushResponse) Reset()         { *m = FlushResponse{} }
func (m *FlushResponse) String() string { return proto.CompactTextString(m) }
func (*FlushResponse) ProtoMessage()    {}
func (*FlushResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2ecc72b0215a83fe, []int{6}
}

func (m *FlushResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlushResponse.Unmarshal(m, b)
}
func (m *FlushResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlushResponse.Marshal(b, m, deterministic)
}
func (m *FlushResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlushResponse.Merge(m, src)
}
func (m *FlushResponse) XXX_Size() int {
	return xxx_messageInfo_FlushResponse.Size(m)
}
func (m *FlushResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FlushResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FlushResponse proto.InternalMessageInfo

func (m *FlushResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type PauseRequest struct {
	Selection            *session.Selection `protobuf:"bytes,1,opt,name=selection,proto3" json:"selection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PauseRequest) Reset()         { *m = PauseRequest{} }
func (m *PauseRequest) String() string { return proto.CompactTextString(m) }
func (*PauseRequest) ProtoMessage()    {}
func (*PauseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2ecc72b0215a83fe, []int{7}
}

func (m *PauseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PauseRequest.Unmarshal(m, b)
}
func (m *PauseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PauseRequest.Marshal(b, m, deterministic)
}
func (m *PauseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PauseRequest.Merge(m, src)
}
func (m *PauseRequest) XXX_Size() int {
	return xxx_messageInfo_PauseRequest.Size(m)
}
func (m *PauseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PauseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PauseRequest proto.InternalMessageInfo

func (m *PauseRequest) GetSelection() *session.Selection {
	if m != nil {
		return m.Selection
	}
	return nil
}

type PauseResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PauseResponse) Reset()         { *m = PauseResponse{} }
func (m *PauseResponse) String() string { return proto.CompactTextString(m) }
func (*PauseResponse) ProtoMessage()    {}
func (*PauseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2ecc72b0215a83fe, []int{8}
}

func (m *PauseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PauseResponse.Unmarshal(m, b)
}
func (m *PauseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PauseResponse.Marshal(b, m, deterministic)
}
func (m *PauseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PauseResponse.Merge(m, src)
}
func (m *PauseResponse) XXX_Size() int {
	return xxx_messageInfo_PauseResponse.Size(m)
}
func (m *PauseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PauseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PauseResponse proto.InternalMessageInfo

func (m *PauseResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ResumeRequest struct {
	Selection            *session.Selection `protobuf:"bytes,1,opt,name=selection,proto3" json:"selection,omitempty"`
	Response             string             `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ResumeRequest) Reset()         { *m = ResumeRequest{} }
func (m *ResumeRequest) String() string { return proto.CompactTextString(m) }
func (*ResumeRequest) ProtoMessage()    {}
func (*ResumeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2ecc72b0215a83fe, []int{9}
}

func (m *ResumeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResumeRequest.Unmarshal(m, b)
}
func (m *ResumeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResumeRequest.Marshal(b, m, deterministic)
}
func (m *ResumeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResumeRequest.Merge(m, src)
}
func (m *ResumeRequest) XXX_Size() int {
	return xxx_messageInfo_ResumeRequest.Size(m)
}
func (m *ResumeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResumeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResumeRequest proto.InternalMessageInfo

func (m *ResumeRequest) GetSelection() *session.Selection {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *ResumeRequest) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

type ResumeResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Prompt               string   `protobuf:"bytes,2,opt,name=prompt,proto3" json:"prompt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResumeResponse) Reset()         { *m = ResumeResponse{} }
func (m *ResumeResponse) String() string { return proto.CompactTextString(m) }
func (*ResumeResponse) ProtoMessage()    {}
func (*ResumeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2ecc72b0215a83fe, []int{10}
}

func (m *ResumeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResumeResponse.Unmarshal(m, b)
}
func (m *ResumeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResumeResponse.Marshal(b, m, deterministic)
}
func (m *ResumeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResumeResponse.Merge(m, src)
}
func (m *ResumeResponse) XXX_Size() int {
	return xxx_messageInfo_ResumeResponse.Size(m)
}
func (m *ResumeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResumeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResumeResponse proto.InternalMessageInfo

func (m *ResumeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ResumeResponse) GetPrompt() string {
	if m != nil {
		return m.Prompt
	}
	return ""
}

type TerminateRequest struct {
	Selection            *session.Selection `protobuf:"bytes,1,opt,name=selection,proto3" json:"selection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TerminateRequest) Reset()         { *m = TerminateRequest{} }
func (m *TerminateRequest) String() string { return proto.CompactTextString(m) }
func (*TerminateRequest) ProtoMessage()    {}
func (*TerminateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2ecc72b0215a83fe, []int{11}
}

func (m *TerminateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TerminateRequest.Unmarshal(m, b)
}
func (m *TerminateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TerminateRequest.Marshal(b, m, deterministic)
}
func (m *TerminateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TerminateRequest.Merge(m, src)
}
func (m *TerminateRequest) XXX_Size() int {
	return xxx_messageInfo_TerminateRequest.Size(m)
}
func (m *TerminateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TerminateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TerminateRequest proto.InternalMessageInfo

func (m *TerminateRequest) GetSelection() *session.Selection {
	if m != nil {
		return m.Selection
	}
	return nil
}

type TerminateResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TerminateResponse) Reset()         { *m = TerminateResponse{} }
func (m *TerminateResponse) String() string { return proto.CompactTextString(m) }
func (*TerminateResponse) ProtoMessage()    {}
func (*TerminateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2ecc72b0215a83fe, []int{12}
}

func (m *TerminateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TerminateResponse.Unmarshal(m, b)
}
func (m *TerminateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TerminateResponse.Marshal(b, m, deterministic)
}
func (m *TerminateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TerminateResponse.Merge(m, src)
}
func (m *TerminateResponse) XXX_Size() int {
	return xxx_messageInfo_TerminateResponse.Size(m)
}
func (m *TerminateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TerminateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TerminateResponse proto.InternalMessageInfo

func (m *TerminateResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*CreationSpecification)(nil), "session.CreationSpecification")
	proto.RegisterMapType((map[string]string)(nil), "session.CreationSpecification.LabelsEntry")
	proto.RegisterType((*CreateRequest)(nil), "session.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "session.CreateResponse")
	proto.RegisterType((*ListRequest)(nil), "session.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "session.ListResponse")
	proto.RegisterType((*FlushRequest)(nil), "session.FlushRequest")
	proto.RegisterType((*FlushResponse)(nil), "session.FlushResponse")
	proto.RegisterType((*PauseRequest)(nil), "session.PauseRequest")
	proto.RegisterType((*PauseResponse)(nil), "session.PauseResponse")
	proto.RegisterType((*ResumeRequest)(nil), "session.ResumeRequest")
	proto.RegisterType((*ResumeResponse)(nil), "session.ResumeResponse")
	proto.RegisterType((*TerminateRequest)(nil), "session.TerminateRequest")
	proto.RegisterType((*TerminateResponse)(nil), "session.TerminateResponse")
}

func init() { proto.RegisterFile("service/session/session.proto", fileDescriptor_2ecc72b0215a83fe) }

var fileDescriptor_2ecc72b0215a83fe = []byte{
	// 678 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0x5d, 0x4f, 0xd3, 0x50,
	0x18, 0x76, 0x9f, 0x6e, 0xef, 0x28, 0x81, 0x57, 0x18, 0xb3, 0x2a, 0x21, 0xbd, 0x42, 0x13, 0x56,
	0x44, 0x4d, 0xd4, 0x90, 0xa0, 0x03, 0x89, 0x26, 0x5c, 0x98, 0x33, 0x8d, 0x89, 0xc1, 0x8b, 0xae,
	0x1c, 0xb6, 0x86, 0xae, 0x2d, 0x3d, 0xed, 0x22, 0x3f, 0xc1, 0x7f, 0xe1, 0x4f, 0x35, 0x3d, 0x3d,
	0xa7, 0x3d, 0x67, 0x4c, 0x88, 0x78, 0xb5, 0xbd, 0x1f, 0xcf, 0xf3, 0x7e, 0x3d, 0x27, 0x85, 0x27,
	0x8c, 0xc6, 0x33, 0xcf, 0xa5, 0x36, 0xa3, 0x8c, 0x79, 0x61, 0x20, 0x7f, 0xfb, 0x51, 0x1c, 0x26,
	0x21, 0xde, 0x17, 0xa6, 0xf9, 0x48, 0xc6, 0xdd, 0x30, 0x38, 0xf7, 0xc6, 0x69, 0xec, 0x24, 0x45,
	0x96, 0xb9, 0x51, 0x82, 0x7d, 0xea, 0x2a, 0x81, 0x07, 0x45, 0x20, 0x71, 0x12, 0x2a, 0x9c, 0x46,
	0x1a, 0xfb, 0x76, 0x1a, 0xfb, 0xb9, 0x69, 0xfd, 0xae, 0xc1, 0xfa, 0x61, 0x4c, 0x39, 0xdf, 0x30,
	0xa2, 0xae, 0x77, 0xee, 0xb9, 0xdc, 0xc0, 0x4d, 0x68, 0x38, 0x7e, 0x34, 0x71, 0x7a, 0x95, 0xad,
	0xca, 0x76, 0x67, 0xaf, 0xd5, 0xcf, 0x40, 0x5f, 0xc9, 0x09, 0xc9, 0xdd, 0xf8, 0x18, 0xea, 0x23,
	0x9a, 0x38, 0xbd, 0xea, 0x5c, 0x98, 0x7b, 0x71, 0x1f, 0x0c, 0xad, 0xd7, 0x5e, 0x8d, 0xa7, 0x75,
	0xfb, 0x72, 0xc2, 0x43, 0x35, 0x4a, 0xf4, 0x64, 0x3c, 0x06, 0xd4, 0x1c, 0xef, 0x79, 0x23, 0xf5,
	0x1b, 0x29, 0x16, 0x20, 0xf0, 0x08, 0x56, 0x35, 0xef, 0x20, 0x6b, 0xb8, 0x71, 0x23, 0xcd, 0x75,
	0x00, 0x0e, 0xa0, 0xe9, 0x3b, 0x23, 0xea, 0xb3, 0x5e, 0x73, 0xab, 0xb6, 0xdd, 0xd9, 0x7b, 0x56,
	0x42, 0x17, 0x6d, 0xae, 0x7f, 0xc2, 0x93, 0x3f, 0x04, 0x49, 0x7c, 0x45, 0x04, 0xd2, 0x7c, 0x03,
	0x1d, 0xc5, 0x8d, 0x2b, 0x50, 0xbb, 0xa0, 0x57, 0x7c, 0xb5, 0x6d, 0x92, 0xfd, 0xc5, 0x35, 0x68,
	0xcc, 0x1c, 0x3f, 0xa5, 0x7c, 0x9f, 0x6d, 0x92, 0x1b, 0x6f, 0xab, 0xaf, 0x2b, 0xd6, 0x25, 0x18,
	0xbc, 0x0e, 0x25, 0xf4, 0x32, 0xa5, 0x2c, 0xc1, 0x23, 0x30, 0x98, 0x5a, 0x50, 0x5c, 0x68, 0xf3,
	0xe6, 0xb6, 0x88, 0x0e, 0x42, 0x13, 0x5a, 0x31, 0x65, 0x51, 0x18, 0x30, 0x59, 0xb3, 0xb0, 0xad,
	0x53, 0x58, 0x96, 0x25, 0x73, 0x0f, 0xf6, 0x40, 0x8a, 0x51, 0x34, 0x2d, 0xcd, 0x2c, 0x32, 0xa5,
	0x8c, 0x39, 0x63, 0x49, 0x23, 0x4d, 0xec, 0x42, 0x33, 0x8a, 0xc3, 0x69, 0x94, 0xf0, 0xe3, 0xb7,
	0x89, 0xb0, 0xac, 0x10, 0x3a, 0x27, 0x1e, 0x4b, 0xe4, 0x38, 0xbb, 0xd0, 0x2e, 0x94, 0x2b, 0x46,
	0xc1, 0x62, 0x94, 0xa1, 0x8c, 0x90, 0x32, 0x09, 0xfb, 0x80, 0x51, 0x4c, 0x67, 0x5e, 0x98, 0xb2,
	0x61, 0x26, 0xed, 0x4f, 0xc1, 0x19, 0xfd, 0xc9, 0xab, 0xd7, 0xc9, 0x82, 0x88, 0x75, 0x06, 0x4b,
	0x79, 0x41, 0x31, 0xcc, 0x26, 0x00, 0x2b, 0x71, 0x15, 0x8e, 0x53, 0x3c, 0xf8, 0x12, 0x0c, 0x51,
	0x9f, 0x93, 0xb0, 0x5e, 0x95, 0xdf, 0x7d, 0xb9, 0xec, 0x2a, 0x73, 0x13, 0x3d, 0xc9, 0x3a, 0x85,
	0xa5, 0x63, 0x3f, 0x65, 0x93, 0xbb, 0xcf, 0x65, 0x42, 0x8b, 0x5d, 0x78, 0xd1, 0x37, 0xc7, 0x4b,
	0xf8, 0x34, 0x2d, 0x52, 0xd8, 0xd6, 0x53, 0x30, 0x04, 0x7b, 0x79, 0x11, 0xb9, 0xf7, 0x8a, 0xb6,
	0x77, 0xeb, 0x1d, 0x2c, 0x7d, 0x76, 0x52, 0x46, 0xef, 0xdc, 0x48, 0x56, 0x4c, 0x30, 0xdc, 0x5a,
	0xec, 0x07, 0x18, 0x84, 0xb2, 0x74, 0x4a, 0xff, 0x6b, 0xec, 0xbf, 0x2a, 0x71, 0x00, 0xcb, 0x92,
	0xfe, 0xb6, 0x56, 0x14, 0xbd, 0x55, 0x35, 0xbd, 0x1d, 0xc1, 0xca, 0x17, 0x1a, 0x4f, 0xbd, 0x40,
	0x79, 0x43, 0xff, 0xbe, 0x93, 0x1d, 0x58, 0x55, 0x58, 0x6e, 0x6b, 0x66, 0xef, 0x57, 0x0d, 0x5a,
	0xc3, 0x9c, 0x8f, 0xe1, 0x01, 0x34, 0xf3, 0xf7, 0x84, 0x5d, 0xfd, 0x91, 0xca, 0x7e, 0xcc, 0x8d,
	0x6b, 0x7e, 0xb1, 0x80, 0x7b, 0xdb, 0x95, 0xdd, 0x0a, 0xbe, 0x82, 0x7a, 0xa6, 0x60, 0x5c, 0x2b,
	0xd2, 0x94, 0x17, 0x64, 0xae, 0xcf, 0x79, 0x25, 0x14, 0xf7, 0xa1, 0xc1, 0x45, 0x83, 0x65, 0x86,
	0x2a, 0x51, 0xb3, 0x3b, 0xef, 0xd6, 0x8a, 0xee, 0x43, 0x83, 0xab, 0x40, 0x41, 0xab, 0xba, 0x52,
	0xd0, 0x9a, 0x58, 0x04, 0xfa, 0x00, 0x9a, 0xf9, 0xe5, 0x94, 0x99, 0x35, 0xa5, 0x28, 0x33, 0xeb,
	0x27, 0x16, 0x04, 0x1f, 0xa1, 0x5d, 0x2c, 0x1c, 0x1f, 0x16, 0xb9, 0xf3, 0xa7, 0x34, 0xcd, 0x45,
	0x21, 0x95, 0x69, 0xf0, 0xfc, 0xbb, 0x3d, 0xf6, 0x92, 0x49, 0x3a, 0xea, 0xbb, 0xe1, 0xd4, 0x9e,
	0x38, 0xb3, 0xd0, 0xdd, 0xf1, 0x42, 0x7b, 0x9a, 0x26, 0xce, 0x98, 0x06, 0x76, 0x74, 0x31, 0xb6,
	0xe7, 0x3e, 0xc4, 0xa3, 0x26, 0xff, 0x3c, 0xbe, 0xf8, 0x13, 0x00, 0x00, 0xff, 0xff, 0x7c, 0x3a,
	0x31, 0xa1, 0xa2, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SessionsClient is the client API for Sessions service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SessionsClient interface {
	Create(ctx context.Context, opts ...grpc.CallOption) (Sessions_CreateClient, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	Flush(ctx context.Context, opts ...grpc.CallOption) (Sessions_FlushClient, error)
	Pause(ctx context.Context, opts ...grpc.CallOption) (Sessions_PauseClient, error)
	Resume(ctx context.Context, opts ...grpc.CallOption) (Sessions_ResumeClient, error)
	Terminate(ctx context.Context, opts ...grpc.CallOption) (Sessions_TerminateClient, error)
}

type sessionsClient struct {
	cc *grpc.ClientConn
}

func NewSessionsClient(cc *grpc.ClientConn) SessionsClient {
	return &sessionsClient{cc}
}

func (c *sessionsClient) Create(ctx context.Context, opts ...grpc.CallOption) (Sessions_CreateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Sessions_serviceDesc.Streams[0], "/session.Sessions/Create", opts...)
	if err != nil {
		return nil, err
	}
	x := &sessionsCreateClient{stream}
	return x, nil
}

type Sessions_CreateClient interface {
	Send(*CreateRequest) error
	Recv() (*CreateResponse, error)
	grpc.ClientStream
}

type sessionsCreateClient struct {
	grpc.ClientStream
}

func (x *sessionsCreateClient) Send(m *CreateRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *sessionsCreateClient) Recv() (*CreateResponse, error) {
	m := new(CreateResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *sessionsClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/session.Sessions/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionsClient) Flush(ctx context.Context, opts ...grpc.CallOption) (Sessions_FlushClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Sessions_serviceDesc.Streams[1], "/session.Sessions/Flush", opts...)
	if err != nil {
		return nil, err
	}
	x := &sessionsFlushClient{stream}
	return x, nil
}

type Sessions_FlushClient interface {
	Send(*FlushRequest) error
	Recv() (*FlushResponse, error)
	grpc.ClientStream
}

type sessionsFlushClient struct {
	grpc.ClientStream
}

func (x *sessionsFlushClient) Send(m *FlushRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *sessionsFlushClient) Recv() (*FlushResponse, error) {
	m := new(FlushResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *sessionsClient) Pause(ctx context.Context, opts ...grpc.CallOption) (Sessions_PauseClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Sessions_serviceDesc.Streams[2], "/session.Sessions/Pause", opts...)
	if err != nil {
		return nil, err
	}
	x := &sessionsPauseClient{stream}
	return x, nil
}

type Sessions_PauseClient interface {
	Send(*PauseRequest) error
	Recv() (*PauseResponse, error)
	grpc.ClientStream
}

type sessionsPauseClient struct {
	grpc.ClientStream
}

func (x *sessionsPauseClient) Send(m *PauseRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *sessionsPauseClient) Recv() (*PauseResponse, error) {
	m := new(PauseResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *sessionsClient) Resume(ctx context.Context, opts ...grpc.CallOption) (Sessions_ResumeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Sessions_serviceDesc.Streams[3], "/session.Sessions/Resume", opts...)
	if err != nil {
		return nil, err
	}
	x := &sessionsResumeClient{stream}
	return x, nil
}

type Sessions_ResumeClient interface {
	Send(*ResumeRequest) error
	Recv() (*ResumeResponse, error)
	grpc.ClientStream
}

type sessionsResumeClient struct {
	grpc.ClientStream
}

func (x *sessionsResumeClient) Send(m *ResumeRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *sessionsResumeClient) Recv() (*ResumeResponse, error) {
	m := new(ResumeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *sessionsClient) Terminate(ctx context.Context, opts ...grpc.CallOption) (Sessions_TerminateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Sessions_serviceDesc.Streams[4], "/session.Sessions/Terminate", opts...)
	if err != nil {
		return nil, err
	}
	x := &sessionsTerminateClient{stream}
	return x, nil
}

type Sessions_TerminateClient interface {
	Send(*TerminateRequest) error
	Recv() (*TerminateResponse, error)
	grpc.ClientStream
}

type sessionsTerminateClient struct {
	grpc.ClientStream
}

func (x *sessionsTerminateClient) Send(m *TerminateRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *sessionsTerminateClient) Recv() (*TerminateResponse, error) {
	m := new(TerminateResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SessionsServer is the server API for Sessions service.
type SessionsServer interface {
	Create(Sessions_CreateServer) error
	List(context.Context, *ListRequest) (*ListResponse, error)
	Flush(Sessions_FlushServer) error
	Pause(Sessions_PauseServer) error
	Resume(Sessions_ResumeServer) error
	Terminate(Sessions_TerminateServer) error
}

func RegisterSessionsServer(s *grpc.Server, srv SessionsServer) {
	s.RegisterService(&_Sessions_serviceDesc, srv)
}

func _Sessions_Create_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SessionsServer).Create(&sessionsCreateServer{stream})
}

type Sessions_CreateServer interface {
	Send(*CreateResponse) error
	Recv() (*CreateRequest, error)
	grpc.ServerStream
}

type sessionsCreateServer struct {
	grpc.ServerStream
}

func (x *sessionsCreateServer) Send(m *CreateResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *sessionsCreateServer) Recv() (*CreateRequest, error) {
	m := new(CreateRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Sessions_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionsServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/session.Sessions/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionsServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sessions_Flush_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SessionsServer).Flush(&sessionsFlushServer{stream})
}

type Sessions_FlushServer interface {
	Send(*FlushResponse) error
	Recv() (*FlushRequest, error)
	grpc.ServerStream
}

type sessionsFlushServer struct {
	grpc.ServerStream
}

func (x *sessionsFlushServer) Send(m *FlushResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *sessionsFlushServer) Recv() (*FlushRequest, error) {
	m := new(FlushRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Sessions_Pause_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SessionsServer).Pause(&sessionsPauseServer{stream})
}

type Sessions_PauseServer interface {
	Send(*PauseResponse) error
	Recv() (*PauseRequest, error)
	grpc.ServerStream
}

type sessionsPauseServer struct {
	grpc.ServerStream
}

func (x *sessionsPauseServer) Send(m *PauseResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *sessionsPauseServer) Recv() (*PauseRequest, error) {
	m := new(PauseRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Sessions_Resume_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SessionsServer).Resume(&sessionsResumeServer{stream})
}

type Sessions_ResumeServer interface {
	Send(*ResumeResponse) error
	Recv() (*ResumeRequest, error)
	grpc.ServerStream
}

type sessionsResumeServer struct {
	grpc.ServerStream
}

func (x *sessionsResumeServer) Send(m *ResumeResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *sessionsResumeServer) Recv() (*ResumeRequest, error) {
	m := new(ResumeRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Sessions_Terminate_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SessionsServer).Terminate(&sessionsTerminateServer{stream})
}

type Sessions_TerminateServer interface {
	Send(*TerminateResponse) error
	Recv() (*TerminateRequest, error)
	grpc.ServerStream
}

type sessionsTerminateServer struct {
	grpc.ServerStream
}

func (x *sessionsTerminateServer) Send(m *TerminateResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *sessionsTerminateServer) Recv() (*TerminateRequest, error) {
	m := new(TerminateRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Sessions_serviceDesc = grpc.ServiceDesc{
	ServiceName: "session.Sessions",
	HandlerType: (*SessionsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Sessions_List_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Create",
			Handler:       _Sessions_Create_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Flush",
			Handler:       _Sessions_Flush_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Pause",
			Handler:       _Sessions_Pause_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Resume",
			Handler:       _Sessions_Resume_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Terminate",
			Handler:       _Sessions_Terminate_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "service/session/session.proto",
}
